1) launch a linux machine
2) sudo su
3) yum install docker -y
4) yum update -y
5) service docker start  #start your docker 
6) service docker status
7) docker images   #list of the docker images in docker registry
8) docker run -it --name c01 ubuntu /bin/bash   #this will create the container with ubuntu image and name c01
9) exit   #exit will exit the container
10) docker ps   #list of the running . but nothing would be there because the container is exitted and as soon it exit it stop
11) docker ps -a   #list of all the container

##################NOW IF YOU WANT TO CREATE A DOCKER FILE(instruction to create custom image) #######################

12) vi Dockerfile #vi is file editor and it will open a file with name Dockerfile 

To start entering press i (insert)

FROM ubuntu  #base image
WORKDIR /tmp
RUN echo"hello axis" > test.txt
COPY testfileakshat /tmp


to exit this file press esc and :wq (save and exit)

13) touch testfileakshat

14) docker build -t newimage .   #build a image with the name newimage from Dockerfile 

15) docker images  #you wil see that a new image which is custom image with name newimage is created

16) docker image history newimage  #it will show history of the docker image

17) docker run -it --name c05 newimage /bin/bash

18) ls

19) cat testfileakshat   #it would be blank file 

20) cat test.txt  #it will show you hello axis as content 

##################################################################################################
###############LAUNCH A WEBSITE VIA DOCKER CONTAINER and DOCKER FILE###############################

21) vi index.html 
press i to start inserting

Hello world 

press esc and :wq

22) vi Dockerfile  

press i and remove existing content 


#BASEIMAGE
FROM httpd
#MAINTAINER
MAINTAINER akshat<akshat@apicletech.com>
#COPY THE INDEX.html file to /usr/local/apache2/htdocs
COPY index.html /usr/local/apache2/htdocs/

#EXPOSE APACHEPORT
EXPOSE 80



press esc and :wq

23) docker build -t webimage .

24) docker images   #you will see the webimage 

25) docker run -d -p 8085:80 --name webserver webimage   # this will create and run the container in background(-d deamean) with name webserver created from webimage
                                                         # we have exposed the port 8085 onto this webserver. so if you open <public ip of the machine>:8085

26) now if you go to your aws console and copy your public ip by selecting your machine and put
it like <public ip>:8085 still it will not run because the security of my machine is not allowing 
8085 port to run.
select the machien -> security ->there you see blue color sg... is written click on that -> edit the inbound rule
add rule-> add tcp port -> 8085 port -> anywhere ipv4


##########################PYTHON APP LAUNCH VIA DOCKER COMPOSE ############################
Create a ubuntu machine on ec2 while connecting via mobaxterm use username as ubuntu

27) sudo su

28) apt-get update -y

27) apt-get install docker.io

28) apt-get install git -y

28)  git clone https://github.com/akshu20791/docker-compose-lab

29) service docker start

30) service docker status

31) ls

32)cd docker-compose-lab

33) docker-compose   (it will say docker-compose is not available, and give the command to install it) 

34) apt-install docker-compose

35) docker-compose build

36) docker compose up

(if you get docker-compose is a magic it means your python app is up and running) 

Documentation: https://drive.google.com/file/d/1iMWRKpCyM1ylDNeKHo3Aatd80Pc16pZe/view?usp=sharing

#############################################################################################